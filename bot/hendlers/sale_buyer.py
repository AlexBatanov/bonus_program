from aiogram import F, Router
from aiogram.types import Message
from aiogram import Router, types
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from utils.helpers import set_data_buyer
from hendlers.start_and_chek_buyer import start_buyer
from keyboards.keyboards import get_key_cancel, get_keyboard_find_buyer, get_keyboard_not_find_duyer, get_keyboard_sale_save_and_cancel, get_keyboard_save_and_cancel
from db.engine_db import get_async_session
from utils.crud_operations import get_object, update_object
from db.models import Buyer
from db.states_group import BuyerForm, BuyerUpdateForm
from utils.crud_operations import create_object


sale_buyer_router = Router()


@sale_buyer_router.callback_query(F.data == "sale")
async def input_films(callback: types.CallbackQuery, state: FSMContext):
    """
    –û–±—ä—è–≤–ª–µ–º –∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç –æ–±–Ω–∞–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã–µ –ø–ª–µ–Ω–∫–∏
    """
    data = await state.get_data()
    number = data.get("number")
    await state.set_state(BuyerUpdateForm.number)
    await state.update_data(number=number)
    await callback.message.answer(
        "–í–≤–µ–¥–∏ –ø–ª–µ–Ω–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø–æ —Ç–∏–ø—É: –≥–ª—è–Ω–µ—Ü –Ω–∞ –¥–∏—Å–ø–ª–µ–π, —Å–∫–∏–Ω –∫–æ–∂–∞",
        reply_markup=get_key_cancel()
    )
    await state.set_state(BuyerUpdateForm.films)
    await callback.answer()


@sale_buyer_router.message(BuyerUpdateForm.films)
async def set_film_pointer(message: Message, state: FSMContext) -> None:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–µ–Ω–∫–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    """
    
    await state.update_data(films=message.text)
    await message.answer(
        f"–í–≤–µ–¥–∏ –æ–±—â—É—é —Å—É–º–º—É —á–µ–∫–∞ –ø–æ —Ç–∏–ø—É: 1590",
        reply_markup=get_key_cancel()
    )
    await state.set_state(BuyerUpdateForm.last_cheque)


@sale_buyer_router.message(BuyerUpdateForm.last_cheque, F.text.regexp(r"^[0-9]+$"))
async def process_last_cheque(message: Message, state: FSMContext):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É–º–º—É —á–µ–∫–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"""

    await state.update_data(last_cheque=message.text)
    await state.set_state(BuyerForm.last_cheque)
    await input_count_bonus(message, state)


async def input_count_bonus(message, state):
    data = await state.get_data()
    buyer = await get_object(get_async_session, Buyer, "number", data.get('number'))
    bonus = buyer.bonus_points
    await message.answer(
        f"–î–æ—Å—Ç—É–ø–Ω–æ –±–∞–ª–ª–æ–≤: {bonus}\n–í–≤–µ–¥–∏ —Å–∫–æ–ª—å–∫–æ —Å–ø–∏—Å–∞—Ç—å –æ—Ç 0 –¥–æ {bonus}",
        reply_markup=get_key_cancel()
    )
    await state.set_state(BuyerUpdateForm.bonus_points)


async def chek_correct_bonus(message, state):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤"""
    data = await state.get_data()
    buyer = await get_object(get_async_session, Buyer, "number", data.get('number'))
    bonus = buyer.bonus_points
    if int(message.text) > bonus:
        await message.answer(
            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è {bonus}"
        )
        await input_count_bonus(message, state)


@sale_buyer_router.message(BuyerUpdateForm.bonus_points, F.text.regexp(r"^[0-9]+$"))
async def set_bonus_pointer(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–ª–ª—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"""
    await chek_correct_bonus(message, state)
    await state.update_data(bonus_points=int(message.text))
    await saly_ouput_data(message, state)

@sale_buyer_router.message(BuyerUpdateForm.last_cheque)
async def incorect_cheque(message, state):
    await message.answer("–í–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞")
    await state.set_state(BuyerUpdateForm.last_cheque)


@sale_buyer_router.message(BuyerUpdateForm.bonus_points)
async def incoret_bonus_pointer(message: Message, state: FSMContext) -> None:
    """–ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–µ –±–∞–ª–ª—ã, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞"""
    await message.answer("–í–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞")
    await input_count_bonus(message, state)


async def saly_ouput_data(message, state):
    data = await state.get_data()
    await message.answer(
        f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–µ–Ω–∫–∏: {data.get('films')}\n"
        f"–°—É–º–º–∞ —á–µ–∫–∞: {data.get('last_cheque')}\n"
        f"–°–ø–∏—Å–∞–Ω–æ –±–∞–ª–ª–æ–≤: {data.get('bonus_points')}\n\n"
        f"–ö –æ–ø–ª–∞—Ç–µ: {int(data.get('last_cheque')) - data.get('bonus_points')}",
        reply_markup=get_keyboard_sale_save_and_cancel()
    )


@sale_buyer_router.callback_query(F.data == "sale_save")
async def save_obj(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    data_buyer = await set_data_buyer(get_async_session, data)
    # await update_object(get_async_session, Buyer, await state.get_data()) 
    # await callback.message.answer("–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω üëç")
    # await state.get_data()
    # await state.clear()
    # await callback.answer()
    # await start_buyer(callback.message, state)

